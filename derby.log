----------------------------------------------------------------
Wed Mar 21 10:51:35 CET 2012:
Booting Derby version The Apache Software Foundation - Apache Derby - 10.7.1.1 - (1040133): instance a816c00e-0136-34ab-2de7-000000a8eec0 
on database directory C:\Users\muia\workspace\programmi\superbudget\database  with class loader sun.misc.Launcher$AppClassLoader@35ce36 
Loaded from file:/C:/Users/muia/workspace/programmi/superbudget/target/lib/derby-10.7.1.1.jar
java.vendor=Sun Microsystems Inc.
java.runtime.version=1.6.0_31-b05
Database Class Loader started - derby.database.classpath='SUPERBUDGET.dbprocedures'
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52329), (SESSIONID = 0), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52329), (SESSIONID = 0), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52330), (SESSIONID = 1), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52330), (SESSIONID = 1), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52331), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52331), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52332), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52333), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: CREATE TABLE BUDGET (BUDGETID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, DEFAULTBUDGET SMALLINT DEFAULT 0, NAME VARCHAR(255), SALDO DECIMAL(15), PRIMARY KEY (BUDGETID)) :End prepared statement
Wed Mar 21 10:51:45 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52333), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: CREATE TABLE BUDGET (BUDGETID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, DEFAULTBUDGET SMALLINT DEFAULT 0, NAME VARCHAR(255), SALDO DECIMAL(15), PRIMARY KEY (BUDGETID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52333), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: CREATE TABLE BUDGET (BUDGETID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, DEFAULTBUDGET SMALLINT DEFAULT 0, NAME VARCHAR(255), SALDO DECIMAL(15), PRIMARY KEY (BUDGETID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52333), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52333), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), CREATE TABLE BUDGET (BUDGETID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, DEFAULTBUDGET SMALLINT DEFAULT 0, NAME VARCHAR(255), SALDO DECIMAL(15), PRIMARY KEY (BUDGETID)) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: CREATE TABLE BUDGETENTRY (BUDGETENTRYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, TYPE VARCHAR(31), DATEFROM DATE, DATETO DATE, NOTE VARCHAR(255), RECURRENCEVALUE INTEGER, VALUE DECIMAL(15), BUDGET_BUDGETID BIGINT, RECURRENCE_RECURRENCEID BIGINT, CATEGORY_CATEGORYID BIGINT, SUBCATEGORY_SUBCATEGORYID BIGINT, PRIMARY KEY (BUDGETENTRYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: CREATE TABLE BUDGETENTRY (BUDGETENTRYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, TYPE VARCHAR(31), DATEFROM DATE, DATETO DATE, NOTE VARCHAR(255), RECURRENCEVALUE INTEGER, VALUE DECIMAL(15), BUDGET_BUDGETID BIGINT, RECURRENCE_RECURRENCEID BIGINT, CATEGORY_CATEGORYID BIGINT, SUBCATEGORY_SUBCATEGORYID BIGINT, PRIMARY KEY (BUDGETENTRYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: CREATE TABLE BUDGETENTRY (BUDGETENTRYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, TYPE VARCHAR(31), DATEFROM DATE, DATETO DATE, NOTE VARCHAR(255), RECURRENCEVALUE INTEGER, VALUE DECIMAL(15), BUDGET_BUDGETID BIGINT, RECURRENCE_RECURRENCEID BIGINT, CATEGORY_CATEGORYID BIGINT, SUBCATEGORY_SUBCATEGORYID BIGINT, PRIMARY KEY (BUDGETENTRYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52337), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), CREATE TABLE BUDGETENTRY (BUDGETENTRYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, TYPE VARCHAR(31), DATEFROM DATE, DATETO DATE, NOTE VARCHAR(255), RECURRENCEVALUE INTEGER, VALUE DECIMAL(15), BUDGET_BUDGETID BIGINT, RECURRENCE_RECURRENCEID BIGINT, CATEGORY_CATEGORYID BIGINT, SUBCATEGORY_SUBCATEGORYID BIGINT, PRIMARY KEY (BUDGETENTRYID)) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: CREATE TABLE CATEGORY (CATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), PRIMARY KEY (CATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: CREATE TABLE CATEGORY (CATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), PRIMARY KEY (CATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: CREATE TABLE CATEGORY (CATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), PRIMARY KEY (CATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52341), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), CREATE TABLE CATEGORY (CATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), PRIMARY KEY (CATEGORYID)) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: CREATE TABLE SUBCATEGORY (SUBCATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), CATEGORY_CATEGORYID BIGINT, PRIMARY KEY (SUBCATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: CREATE TABLE SUBCATEGORY (SUBCATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), CATEGORY_CATEGORYID BIGINT, PRIMARY KEY (SUBCATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: CREATE TABLE SUBCATEGORY (SUBCATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), CATEGORY_CATEGORYID BIGINT, PRIMARY KEY (SUBCATEGORYID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52344), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), CREATE TABLE SUBCATEGORY (SUBCATEGORYID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, NAME VARCHAR(255), CATEGORY_CATEGORYID BIGINT, PRIMARY KEY (SUBCATEGORYID)) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: CREATE TABLE RECURRENCE (RECURRENCEID BIGINT NOT NULL, CALENDARFIELD INTEGER, CALENDARINCREMENT INTEGER, NAME VARCHAR(255), PRIMARY KEY (RECURRENCEID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: CREATE TABLE RECURRENCE (RECURRENCEID BIGINT NOT NULL, CALENDARFIELD INTEGER, CALENDARINCREMENT INTEGER, NAME VARCHAR(255), PRIMARY KEY (RECURRENCEID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: CREATE TABLE RECURRENCE (RECURRENCEID BIGINT NOT NULL, CALENDARFIELD INTEGER, CALENDARINCREMENT INTEGER, NAME VARCHAR(255), PRIMARY KEY (RECURRENCEID)) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52347), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), CREATE TABLE RECURRENCE (RECURRENCEID BIGINT NOT NULL, CALENDARFIELD INTEGER, CALENDARINCREMENT INTEGER, NAME VARCHAR(255), PRIMARY KEY (RECURRENCEID)) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: ALTER TABLE BUDGETENTRY ADD CONSTRAINT BDGSBCTGRYSBCTGRYD FOREIGN KEY (SUBCATEGORY_SUBCATEGORYID) REFERENCES SUBCATEGORY (SUBCATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: ALTER TABLE BUDGETENTRY ADD CONSTRAINT BDGSBCTGRYSBCTGRYD FOREIGN KEY (SUBCATEGORY_SUBCATEGORYID) REFERENCES SUBCATEGORY (SUBCATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: ALTER TABLE BUDGETENTRY ADD CONSTRAINT BDGSBCTGRYSBCTGRYD FOREIGN KEY (SUBCATEGORY_SUBCATEGORYID) REFERENCES SUBCATEGORY (SUBCATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52350), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), ALTER TABLE BUDGETENTRY ADD CONSTRAINT BDGSBCTGRYSBCTGRYD FOREIGN KEY (SUBCATEGORY_SUBCATEGORYID) REFERENCES SUBCATEGORY (SUBCATEGORYID) ******* null
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: ALTER TABLE SUBCATEGORY ADD CONSTRAINT SBCTGRYCTGRYCTGRYD FOREIGN KEY (CATEGORY_CATEGORYID) REFERENCES CATEGORY (CATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: ALTER TABLE SUBCATEGORY ADD CONSTRAINT SBCTGRYCTGRYCTGRYD FOREIGN KEY (CATEGORY_CATEGORYID) REFERENCES CATEGORY (CATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: ALTER TABLE SUBCATEGORY ADD CONSTRAINT SBCTGRYCTGRYCTGRYD FOREIGN KEY (CATEGORY_CATEGORYID) REFERENCES CATEGORY (CATEGORYID) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52355), (SESSIONID = 2), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: VALUES(1) :End prepared statement
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), VALUES(1) ******* Row ResultSet:
Number of opens = 1
Rows returned = 0
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            0,00


Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:46 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), ALTER TABLE SUBCATEGORY ADD CONSTRAINT SBCTGRYCTGRYCTGRYD FOREIGN KEY (CATEGORY_CATEGORYID) REFERENCES CATEGORY (CATEGORYID) ******* null
Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: SELECT BUDGETID, DEFAULTBUDGET, NAME, SALDO FROM BUDGET :End prepared statement
Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: SELECT BUDGETID, DEFAULTBUDGET, NAME, SALDO FROM BUDGET :End prepared statement
Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT BUDGETID, DEFAULTBUDGET, NAME, SALDO FROM BUDGET :End prepared statement
Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), SELECT BUDGETID, DEFAULTBUDGET, NAME, SALDO FROM BUDGET ******* Table Scan ResultSet for BUDGET at read committed isolation level using instantaneous share row locking chosen by the optimizer
Number of opens = 1
Rows seen = 1
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	next time in milliseconds/row = 0

scan information:
	Bit set of columns fetched=All
	Number of columns fetched=4
	Number of pages visited=1
	Number of rows qualified=1
	Number of rows visited=1
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		None
	optimizer estimated row count:            6,00
	optimizer estimated cost:          100,40

Wed Mar 21 10:51:47 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52357), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-01-01 :end parameter begin parameter #2: 2012-12-31 :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter begin parameter #5: 2012-01-01 :end parameter begin parameter #6: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52363), (SESSIONID = 4), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52363), (SESSIONID = 4), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52364), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: SELECT CATEGORYID, NAME FROM CATEGORY WHERE (CATEGORYID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: SELECT CATEGORYID, NAME FROM CATEGORY WHERE (CATEGORYID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT CATEGORYID, NAME FROM CATEGORY WHERE (CATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), SELECT CATEGORYID, NAME FROM CATEGORY WHERE (CATEGORYID = ?) ******* Index Row to Base Row ResultSet for CATEGORY:
Number of opens = 1
Rows seen = 1
Columns accessed from heap = {1}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            8,53

	Index Scan ResultSet for CATEGORY using constraint SQL120314090338710 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 1
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		next time in milliseconds/row = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=1
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            8,53


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52365), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: SELECT RECURRENCEID, CALENDARFIELD, CALENDARINCREMENT, NAME FROM RECURRENCE WHERE (RECURRENCEID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: SELECT RECURRENCEID, CALENDARFIELD, CALENDARINCREMENT, NAME FROM RECURRENCE WHERE (RECURRENCEID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT RECURRENCEID, CALENDARFIELD, CALENDARINCREMENT, NAME FROM RECURRENCE WHERE (RECURRENCEID = ?) :End prepared statement with 1 parameters begin parameter #1: 1 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), SELECT RECURRENCEID, CALENDARFIELD, CALENDARINCREMENT, NAME FROM RECURRENCE WHERE (RECURRENCEID = ?) ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 1
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            5,12

Source result set:
	Index Row to Base Row ResultSet for RECURRENCE:
	Number of opens = 1
	Rows seen = 1
	Columns accessed from heap = {1, 2, 3}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            1,00
		optimizer estimated cost:            5,12

		Index Scan ResultSet for RECURRENCE using constraint SQL120314090338820 at read committed isolation level using share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 1
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			Number of pages visited=1
			Number of rows qualified=1
			Number of rows visited=1
			Scan type=btree
			Tree height=-1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            1,00
			optimizer estimated cost:            5,12


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52367), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52369), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52371), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52371), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52371), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52371), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52372), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52372), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52372), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52372), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (14):
Number of opens = 1
Rows seen = 3
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:           18,00
	optimizer estimated cost:          301,21

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 3
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:           18,00
		optimizer estimated cost:          301,21

	Source result set:
		Project-Restrict ResultSet (13):
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:           18,00
			optimizer estimated cost:          301,21

		Source result set:
			Project-Restrict ResultSet (12):
			Number of opens = 1
			Rows seen = 3
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:           18,00
				optimizer estimated cost:          301,21

			Source result set:
				Sort ResultSet:
				Number of opens = 1
				Rows input = 3
				Rows returned = 3
				Eliminate duplicates = true
				In sorted order = false
				Sort information: 
					Number of rows input=3
					Number of rows output=3
					Sort type=internal
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					optimizer estimated row count:           18,00
					optimizer estimated cost:          301,21

				Source result set:
					Union ResultSet:
					Number of opens = 1
					Rows seen from the left = 2
					Rows seen from the right = 1
					Rows returned = 3
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						optimizer estimated row count:           18,00
						optimizer estimated cost:          301,21

					Left result set:
						Sort ResultSet:
						Number of opens = 1
						Rows input = 2
						Rows returned = 2
						Eliminate duplicates = true
						In sorted order = false
						Sort information: 
							Number of rows input=2
							Number of rows output=2
							Sort type=internal
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							optimizer estimated row count:           12,00
							optimizer estimated cost:          200,81

						Source result set:
							Union ResultSet:
							Number of opens = 1
							Rows seen from the left = 1
							Rows seen from the right = 1
							Rows returned = 2
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								optimizer estimated row count:           12,00
								optimizer estimated cost:          200,81

							Left result set:
								Project-Restrict ResultSet (7):
								Number of opens = 1
								Rows seen = 1
								Rows filtered = 0
								restriction = false
								projection = true
									constructor time (milliseconds) = 0
									open time (milliseconds) = 0
									next time (milliseconds) = 0
									close time (milliseconds) = 0
									restriction time (milliseconds) = 0
									projection time (milliseconds) = 0
									optimizer estimated row count:            6,00
									optimizer estimated cost:          100,40

								Source result set:
									Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
									Number of opens = 1
									Rows seen = 1
									Rows filtered = 0
									Fetch Size = 1
										constructor time (milliseconds) = 0
										open time (milliseconds) = 0
										next time (milliseconds) = 0
										close time (milliseconds) = 0
										next time in milliseconds/row = 0

									scan information:
										Bit set of columns fetched={}
										Number of columns fetched=0
										Number of pages visited=1
										Number of rows qualified=1
										Number of rows visited=1
										Scan type=heap
										start position:
											null
										stop position:
											null
										qualifiers:
											None
										optimizer estimated row count:            6,00
										optimizer estimated cost:          100,40

							Right result set:
								Project-Restrict ResultSet (9):
								Number of opens = 1
								Rows seen = 1
								Rows filtered = 0
								restriction = false
								projection = true
									constructor time (milliseconds) = 0
									open time (milliseconds) = 0
									next time (milliseconds) = 0
									close time (milliseconds) = 0
									restriction time (milliseconds) = 0
									projection time (milliseconds) = 0
									optimizer estimated row count:            6,00
									optimizer estimated cost:          100,40

								Source result set:
									Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
									Number of opens = 1
									Rows seen = 1
									Rows filtered = 0
									Fetch Size = 1
										constructor time (milliseconds) = 0
										open time (milliseconds) = 0
										next time (milliseconds) = 0
										close time (milliseconds) = 0
										next time in milliseconds/row = 0

									scan information:
										Bit set of columns fetched={}
										Number of columns fetched=0
										Number of pages visited=1
										Number of rows qualified=1
										Number of rows visited=1
										Scan type=heap
										start position:
											null
										stop position:
											null
										qualifiers:
											None
										optimizer estimated row count:            6,00
										optimizer estimated cost:          100,40



					Right result set:
						Project-Restrict ResultSet (11):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40




Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 0
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52359), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-01-01 :end parameter begin parameter #2: 2012-12-31 :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter begin parameter #5: 2012-01-01 :end parameter begin parameter #6: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 0
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,00
	optimizer estimated cost:           46,02

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 0
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,00
		optimizer estimated cost:           46,02

	Source result set:
		Project-Restrict ResultSet (4):
		Number of opens = 1
		Rows seen = 0
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:            0,00
			optimizer estimated cost:           46,02

		Source result set:
			Project-Restrict ResultSet (3):
			Number of opens = 1
			Rows seen = 0
			Rows filtered = 0
			restriction = true
			projection = false
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:            0,00
				optimizer estimated cost:           46,02

			Source result set:
				Table Scan ResultSet for BUDGETENTRY at read committed isolation level using share row locking chosen by the optimizer
				Number of opens = 0
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0

				scan information:
					start position:
						null
					stop position:
						null
					qualifiers:
						None
					optimizer estimated row count:            0,00
					optimizer estimated cost:           46,02


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 3
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52373), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-01-01 :end parameter begin parameter #2: 2012-12-31 :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter begin parameter #5: 2012-01-01 :end parameter begin parameter #6: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52376), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52376), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52376), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52376), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52377), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52377), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52377), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52377), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52378), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52378), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52378), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52378), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 42 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-02-20') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (14):
Number of opens = 1
Rows seen = 3
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:           18,00
	optimizer estimated cost:          301,21

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 3
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:           18,00
		optimizer estimated cost:          301,21

	Source result set:
		Project-Restrict ResultSet (13):
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:           18,00
			optimizer estimated cost:          301,21

		Source result set:
			Project-Restrict ResultSet (12):
			Number of opens = 1
			Rows seen = 3
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:           18,00
				optimizer estimated cost:          301,21

			Source result set:
				Sort ResultSet:
				Number of opens = 1
				Rows input = 3
				Rows returned = 3
				Eliminate duplicates = true
				In sorted order = false
				Sort information: 
					Number of rows input=3
					Number of rows output=3
					Sort type=internal
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					optimizer estimated row count:           18,00
					optimizer estimated cost:          301,21

				Source result set:
					Union ResultSet:
					Number of opens = 1
					Rows seen from the left = 2
					Rows seen from the right = 1
					Rows returned = 3
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						optimizer estimated row count:           18,00
						optimizer estimated cost:          301,21

					Left result set:
						Sort ResultSet:
						Number of opens = 1
						Rows input = 2
						Rows returned = 2
						Eliminate duplicates = true
						In sorted order = false
						Sort information: 
							Number of rows input=2
							Number of rows output=2
							Sort type=internal
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							optimizer estimated row count:           12,00
							optimizer estimated cost:          200,81

						Source result set:
							Union ResultSet:
							Number of opens = 1
							Rows seen from the left = 1
							Rows seen from the right = 1
							Rows returned = 2
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								optimizer estimated row count:           12,00
								optimizer estimated cost:          200,81

							Left result set:
								Project-Restrict ResultSet (7):
								Number of opens = 1
								Rows seen = 1
								Rows filtered = 0
								restriction = false
								projection = true
									constructor time (milliseconds) = 0
									open time (milliseconds) = 0
									next time (milliseconds) = 0
									close time (milliseconds) = 0
									restriction time (milliseconds) = 0
									projection time (milliseconds) = 0
									optimizer estimated row count:            6,00
									optimizer estimated cost:          100,40

								Source result set:
									Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
									Number of opens = 1
									Rows seen = 1
									Rows filtered = 0
									Fetch Size = 1
										constructor time (milliseconds) = 0
										open time (milliseconds) = 0
										next time (milliseconds) = 0
										close time (milliseconds) = 0
										next time in milliseconds/row = 0

									scan information:
										Bit set of columns fetched={}
										Number of columns fetched=0
										Number of pages visited=1
										Number of rows qualified=1
										Number of rows visited=1
										Scan type=heap
										start position:
											null
										stop position:
											null
										qualifiers:
											None
										optimizer estimated row count:            6,00
										optimizer estimated cost:          100,40

							Right result set:
								Project-Restrict ResultSet (9):
								Number of opens = 1
								Rows seen = 1
								Rows filtered = 0
								restriction = false
								projection = true
									constructor time (milliseconds) = 0
									open time (milliseconds) = 0
									next time (milliseconds) = 0
									close time (milliseconds) = 0
									restriction time (milliseconds) = 0
									projection time (milliseconds) = 0
									optimizer estimated row count:            6,00
									optimizer estimated cost:          100,40

								Source result set:
									Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
									Number of opens = 1
									Rows seen = 1
									Rows filtered = 0
									Fetch Size = 1
										constructor time (milliseconds) = 0
										open time (milliseconds) = 0
										next time (milliseconds) = 0
										close time (milliseconds) = 0
										next time in milliseconds/row = 0

									scan information:
										Bit set of columns fetched={}
										Number of columns fetched=0
										Number of pages visited=1
										Number of rows qualified=1
										Number of rows visited=1
										Scan type=heap
										start position:
											null
										stop position:
											null
										qualifiers:
											None
										optimizer estimated row count:            6,00
										optimizer estimated cost:          100,40



					Right result set:
						Project-Restrict ResultSet (11):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40




Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 0
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52375), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-01-01 :end parameter begin parameter #2: 2012-12-31 :end parameter begin parameter #3: 2012-01-01 :end parameter begin parameter #4: 2012-12-31 :end parameter begin parameter #5: 2012-01-01 :end parameter begin parameter #6: 2012-12-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 0
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,00
	optimizer estimated cost:           46,02

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 0
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,00
		optimizer estimated cost:           46,02

	Source result set:
		Project-Restrict ResultSet (4):
		Number of opens = 1
		Rows seen = 0
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:            0,00
			optimizer estimated cost:           46,02

		Source result set:
			Project-Restrict ResultSet (3):
			Number of opens = 1
			Rows seen = 0
			Rows filtered = 0
			restriction = true
			projection = false
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:            0,00
				optimizer estimated cost:           46,02

			Source result set:
				Table Scan ResultSet for BUDGETENTRY at read committed isolation level using share row locking chosen by the optimizer
				Number of opens = 0
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0

				scan information:
					start position:
						null
					stop position:
						null
					qualifiers:
						None
					optimizer estimated row count:            0,00
					optimizer estimated cost:           46,02


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 3
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52379), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Begin compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), End compiling prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-03-01 :end parameter begin parameter #2: 2012-03-31 :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter begin parameter #5: 2012-03-01 :end parameter begin parameter #6: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52382), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52382), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52382), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52382), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52383), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52383), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52383), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52383), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (10):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:           12,00
	optimizer estimated cost:          200,81

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:           12,00
		optimizer estimated cost:          200,81

	Source result set:
		Project-Restrict ResultSet (9):
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:           12,00
			optimizer estimated cost:          200,81

		Source result set:
			Project-Restrict ResultSet (8):
			Number of opens = 1
			Rows seen = 2
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:           12,00
				optimizer estimated cost:          200,81

			Source result set:
				Sort ResultSet:
				Number of opens = 1
				Rows input = 2
				Rows returned = 2
				Eliminate duplicates = true
				In sorted order = false
				Sort information: 
					Number of rows input=2
					Number of rows output=2
					Sort type=internal
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					optimizer estimated row count:           12,00
					optimizer estimated cost:          200,81

				Source result set:
					Union ResultSet:
					Number of opens = 1
					Rows seen from the left = 1
					Rows seen from the right = 1
					Rows returned = 2
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						optimizer estimated row count:           12,00
						optimizer estimated cost:          200,81

					Left result set:
						Project-Restrict ResultSet (5):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40

					Right result set:
						Project-Restrict ResultSet (7):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40




Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 1
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52380), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-03-01 :end parameter begin parameter #2: 2012-03-31 :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter begin parameter #5: 2012-03-01 :end parameter begin parameter #6: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 0
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,00
	optimizer estimated cost:           46,02

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 0
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,00
		optimizer estimated cost:           46,02

	Source result set:
		Project-Restrict ResultSet (4):
		Number of opens = 1
		Rows seen = 0
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:            0,00
			optimizer estimated cost:           46,02

		Source result set:
			Project-Restrict ResultSet (3):
			Number of opens = 1
			Rows seen = 0
			Rows filtered = 0
			restriction = true
			projection = false
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:            0,00
				optimizer estimated cost:           46,02

			Source result set:
				Table Scan ResultSet for BUDGETENTRY at read committed isolation level using share row locking chosen by the optimizer
				Number of opens = 0
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0

				scan information:
					start position:
						null
					stop position:
						null
					qualifiers:
						None
					optimizer estimated row count:            0,00
					optimizer estimated cost:           46,02


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 3
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52384), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: I :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-03-01 :end parameter begin parameter #2: 2012-03-31 :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter begin parameter #5: 2012-03-01 :end parameter begin parameter #6: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52386), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52386), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52386), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52386), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52387), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) :End prepared statement with 1 parameters begin parameter #1: 0 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52387), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52387), (SESSIONID = 5), SELECT SUBCATEGORYID, NAME, CATEGORY_CATEGORYID FROM SUBCATEGORY WHERE (SUBCATEGORYID = ?) ******* Index Row to Base Row ResultSet for SUBCATEGORY:
Number of opens = 1
Rows seen = 0
Columns accessed from heap = {1, 2}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	optimizer estimated row count:            1,00
	optimizer estimated cost:            6,35

	Index Scan ResultSet for SUBCATEGORY using constraint SQL120314090338780 at read committed isolation level using share row locking chosen by the optimizer
	Number of opens = 1
	Rows seen = 0
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0

	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		Number of pages visited=1
		Number of rows qualified=0
		Number of rows visited=1
		Scan type=btree
		Tree height=-1
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
		optimizer estimated row count:            1,00
		optimizer estimated cost:            6,35


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52387), (SESSIONID = 5), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from( select 1 as BUDGET_BUDGETID, 40 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-01') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1  UNION select 1 as BUDGET_BUDGETID, 41 as BUDGETENTRYID, 1 as CATEGORY_CATEGORYID, DATE ('2012-03-02') as DATEFROM, cast(null as DATE) as DATETO, CAST (null as VARCHAR(255)) as NOTE, '1' as RECURRENCE_RECURRENCEID, CAST (null as BIGINT) as SUBCATEGORY_SUBCATEGORYID, 'I' as TYPE, 1 as VALUE from SYSIBM.SYSDUMMY1   ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (10):
Number of opens = 1
Rows seen = 2
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:           12,00
	optimizer estimated cost:          200,81

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 2
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:           12,00
		optimizer estimated cost:          200,81

	Source result set:
		Project-Restrict ResultSet (9):
		Number of opens = 1
		Rows seen = 2
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:           12,00
			optimizer estimated cost:          200,81

		Source result set:
			Project-Restrict ResultSet (8):
			Number of opens = 1
			Rows seen = 2
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:           12,00
				optimizer estimated cost:          200,81

			Source result set:
				Sort ResultSet:
				Number of opens = 1
				Rows input = 2
				Rows returned = 2
				Eliminate duplicates = true
				In sorted order = false
				Sort information: 
					Number of rows input=2
					Number of rows output=2
					Sort type=internal
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					optimizer estimated row count:           12,00
					optimizer estimated cost:          200,81

				Source result set:
					Union ResultSet:
					Number of opens = 1
					Rows seen from the left = 1
					Rows seen from the right = 1
					Rows returned = 2
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						optimizer estimated row count:           12,00
						optimizer estimated cost:          200,81

					Left result set:
						Project-Restrict ResultSet (5):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40

					Right result set:
						Project-Restrict ResultSet (7):
						Number of opens = 1
						Rows seen = 1
						Rows filtered = 0
						restriction = false
						projection = true
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
							restriction time (milliseconds) = 0
							projection time (milliseconds) = 0
							optimizer estimated row count:            6,00
							optimizer estimated cost:          100,40

						Source result set:
							Table Scan ResultSet for SYSDUMMY1 at read committed isolation level using share row locking chosen by the optimizer
							Number of opens = 1
							Rows seen = 1
							Rows filtered = 0
							Fetch Size = 1
								constructor time (milliseconds) = 0
								open time (milliseconds) = 0
								next time (milliseconds) = 0
								close time (milliseconds) = 0
								next time in milliseconds/row = 0

							scan information:
								Bit set of columns fetched={}
								Number of columns fetched=0
								Number of pages visited=1
								Number of rows qualified=1
								Number of rows visited=1
								Scan type=heap
								start position:
									null
								stop position:
									null
								qualifiers:
									None
								optimizer estimated row count:            6,00
								optimizer estimated cost:          100,40




Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 1
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52385), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: {call getBudgetEntry(?,?,?,?)} :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  :End prepared statement with 4 parameters begin parameter #1: 1 :end parameter begin parameter #2: E :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Executing prepared statement: select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  :End prepared statement with 6 parameters begin parameter #1: 2012-03-01 :end parameter begin parameter #2: 2012-03-31 :end parameter begin parameter #3: 2012-03-01 :end parameter begin parameter #4: 2012-03-31 :end parameter begin parameter #5: 2012-03-01 :end parameter begin parameter #6: 2012-03-31 :end parameter 
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), {call getBudgetEntry(?,?,?,?)} ******* null
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Rolling back
Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), select  row_number() OVER () AS BUDGETENTRYVIEWID ,tr.* from(  select * from BUDGETENTRY where 1 = 0  ) as TR where (? <= DATEFROM AND ? >= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END)       OR DATEFROM BETWEEN ? AND  ?       OR CASE WHEN DATETO IS NULL THEN DATEFROM ELSE DATETO END BETWEEN ? AND ?  ******* Project-Restrict ResultSet (5):
Number of opens = 1
Rows seen = 0
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,00
	optimizer estimated cost:           46,02

Source result set:
	Window ResultSet: ()
	Number of opens = 1
	Rows seen = 0
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,00
		optimizer estimated cost:           46,02

	Source result set:
		Project-Restrict ResultSet (4):
		Number of opens = 1
		Rows seen = 0
		Rows filtered = 0
		restriction = false
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
			optimizer estimated row count:            0,00
			optimizer estimated cost:           46,02

		Source result set:
			Project-Restrict ResultSet (3):
			Number of opens = 1
			Rows seen = 0
			Rows filtered = 0
			restriction = true
			projection = false
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
				optimizer estimated row count:            0,00
				optimizer estimated cost:           46,02

			Source result set:
				Table Scan ResultSet for BUDGETENTRY at read committed isolation level using share row locking chosen by the optimizer
				Number of opens = 0
				Rows seen = 0
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0

				scan information:
					start position:
						null
					stop position:
						null
					qualifiers:
						None
					optimizer estimated row count:            0,00
					optimizer estimated cost:           46,02


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), select * from BUDGETENTRY where BUDGET_BUDGETID = ? AND TYPE = ?AND (    RECURRENCE_RECURRENCEID <> 1 OR    (       RECURRENCE_RECURRENCEID = 1 AND       DATEFROM >= ?       AND ? <= CASE WHEN DATETO IS NULL THEN DATE('9999-12-31') ELSE DATETO END    ) )  ******* Project-Restrict ResultSet (3):
Number of opens = 1
Rows seen = 3
Rows filtered = 3
restriction = true
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
	optimizer estimated row count:            0,04
	optimizer estimated cost:            9,01

Source result set:
	Index Row to Base Row ResultSet for BUDGETENTRY:
	Number of opens = 1
	Rows seen = 3
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		optimizer estimated row count:            0,04
		optimizer estimated cost:            9,01

		Index Scan ResultSet for BUDGETENTRY using constraint BDGTNTRYBDGTBDGTID at read committed isolation level using instantaneous share row locking chosen by the optimizer
		Number of opens = 1
		Rows seen = 3
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			next time in milliseconds/row = 0

		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=39
			Number of pages visited=1
			Number of rows qualified=3
			Number of rows visited=42
			Scan type=btree
			Tree height=1
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
			optimizer estimated row count:            0,04
			optimizer estimated cost:            9,01


Wed Mar 21 10:51:49 CET 2012 Thread[SwingWorker-pool-1-thread-1,5,main] (XID = 52388), (SESSIONID = 3), (DATABASE = ./database), (DRDAID = null), Committing
----------------------------------------------------------------
Wed Mar 21 10:51:59 CET 2012: Shutting down Derby engine
----------------------------------------------------------------
Wed Mar 21 10:51:59 CET 2012:
Shutting down instance a816c00e-0136-34ab-2de7-000000a8eec0 on database directory C:\Users\muia\workspace\programmi\superbudget\database with class loader sun.misc.Launcher$AppClassLoader@35ce36 
----------------------------------------------------------------
